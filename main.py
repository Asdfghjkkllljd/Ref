from aiogram import Bot, Dispatcher, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
import markups as nav
from db import Database
import time
import config as cfg
from config import TOKEN
import time
import random
from random import randint
#–Ω–µ —Ç—Ä–æ–≥–∞—Ç—å !
CHANNEL_ID = '@extremecasinoo'
#–Ω–µ —Ç—Ä–æ–≥–∞—Ç—å !











CHANNEL_ID_2 = '@—Ç–µ–≥ –≤—Ç–æ—Ä–æ–≥–æ –∫–∞–Ω–∞–ª–∞'

num = "G.D-" + "{0}".format(randint(0, 100))

TOKEN = '–¢–æ–∫–µ–Ω –±–æ—Ç–∞' #–∏–∑ #BotFather

Bot = Bot(token=TOKEN)
dp = Dispatcher(Bot)
db = Database('database.db')

online = '–ë–æ—Ç –≤—ã—à–µ–ª –≤ –æ–Ω–ª–∞–π–Ω'
admin = 'ID –∞–¥–º–∏–Ω–∞'


async def on_startup(_):
    print(online)

def check_sub_channel(chat_member):
    print(chat_member['status'])
    if chat_member['status'] != 'left':
        return True
    else:
        return False

@dp.message_handler(commands=['start'])
async def getstart(message: types.Message):
    if message.chat.type == 'private':
        if not db.user_exists(message.from_user.id):
            start_command = message.text
            referrer_id = str(start_command[7:])
            if str(referrer_id) != "":
                if str(referrer_id) != str(message.from_user.id):
                    db.add_user(message.from_user.id, referrer_id)
                    try:
                        await Bot.send_message(referrer_id, "<b>–ü–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è 1 —á–µ–ª–æ–≤–µ–∫üë•</b>", parse_mode='HTML')
                    except:
                        pass
                else:
                    db.add_user(message.from_user.id)
                    await Bot.send_message(message.from_user.id, "<b>üé≠–ù–µ–ª—å–∑—è —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø–æ —Å–≤–æ–µ–π —Å—Å—ã–ª–∫–µüé≠ !</b>", parse_mode='HTML')

            else:
                db.add_user(message.from_user.id)
    if check_sub_channel(await Bot.get_chat_member(chat_id=CHANNEL_ID, user_id=message.from_user.id)):
        await Bot.send_message(message.from_user.id, "<b>ü•Å–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—åü•Å!\n--------------\n–ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π –¥–µ–Ω—å–≥–∏üí∏\n1 –ø—Ä–∏–≤–ª–µ—á–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—åüë• = 0.40‚ÇΩ\n--------------\nüíé–ü—Ä–æ–¥–∞–µ—Ç—Å—è —Ä–µ–∫–ª–∞–º–Ω–æ–µ –º–µ—Å—Ç–æ –ø–æ–¥—Ä–æ–±–Ω–µ–µ @NotIdiotsüíé</b>", parse_mode='HTML', reply_markup=nav.MainMenu)
    else:
        await Bot.send_message(message.from_user.id, "<b>üìì–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞!üìì</b> ", parse_mode='HTML', reply_markup=nav.checkSubMenu)


@dp.message_handler(commands='setpay')
async def setpay(message: types.Message):
    if 'P' in message.text:
        text = message.text[8:]
        db.set_payments(message.from_user.id, text)
        db.set_signup(message.from_user.id, "done")
        user_pay = "üÖøÔ∏è–í–∞—à–∞ –ø–ª–∞—Ç–µ–∂–∫–∞: " + db.get_payments(message.from_user.id)
        await Bot.send_message(message.from_user.id, f"<b>–í–∞—à–∞ –ø–ª–∞—Ç–µ–∂–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ !\n\n{user_pay}</b> ", parse_mode='HTML')
    else:
        await message.reply("<b>–í–≤–µ–¥–∏—Ç–µ –≤–∞—à PAYEER —Å—á–µ—Ç !</b>", parse_mode='HTML')



@dp.message_handler(commands=['sendall'])
async def get_all(message: types.Message):
    if message.chat.type == 'private':
        if (message.from_user.id == –∞–π–¥–∏ –∞–¥–º–∏–Ω–∞):
            text = message.text[9:]
            users = db.get_user()
            for row in users:
                try:
                    await Bot.send_message(row[0], text)
                    if int(row[1]) != 1:
                        db.set_active(row[0], 1)
                except:
                    pass
    if (message.from_user.id == –∞–π–¥–∏ –∞–¥–º–∏–Ω–∞):
        await Bot.send_message(message.from_user.id, "<b>–£—Å–ø–µ—à–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ !</b>", parse_mode='HTML')
    else:
        await Bot.send_message(message.from_user.id, "–¢—ã –Ω–µ –∞–¥–º–∏–Ω")


@dp.message_handler()
async def keyboards(message: types.Message):
    if message.text == 'üë®‚Äçüíª –õ–∏—á–Ω—ã–π –ö–∞–±–∏–Ω–µ—Ç':
        user_pay = "üÖøÔ∏è–í–∞—à–∞ –ø–ª–∞—Ç–µ–∂–∫–∞: " + db.get_payments(message.from_user.id)
        await Bot.send_message(message.from_user.id, f"<b>–í—ã –≤ üë®‚Äçüíª –õ–∏—á–Ω–æ–º –ö–∞–±–∏–Ω–µ—Ç–µ \n\n üÜî–í–∞—à ID: {message.chat.id} \nüïµÔ∏è–í–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è: {message.from_user.first_name} \n üÜî–£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID: {num}{message.chat.id} \n\nüë•–ü—Ä–∏–≤–ª–µ—á–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {db.count_reeferals(message.from_user.id)} \nüë§–í–∞—Å –ø—Ä–∏–≤–µ–ª: {db.get_referrer(message.from_user.id)}\n\nüìÆ–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:  –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚û° –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å  \n{user_pay}</b> ", parse_mode='HTML', reply_markup=nav.OutMenu)
    if message.text == '–í—ã–≤–µ—Å—Ç–∏üì§':
        await Bot.send_message(message.from_user.id, f"<b>‚öî–í—ã–≤–æ–¥ —Å 2 ‚ÇΩ \n\nüìÆ–ù–∞ –∫–∞—Å—Å–µ: 10 ‚ÇΩ\nüë•–ü—Ä–∏–≤–ª–µ—á–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {db.count_reeferals(message.from_user.id)} \n\n–í—ã —É–≤–µ—Ä–µ–Ω—ã –≤—ã–≤–µ—Å—Ç–∏ ?</b> ", reply_markup=nav.AcceptMenu, parse_mode='HTML')
    if message.text == '–î–∞ —è —É–≤–µ—Ä–µ–Ωüí∞':
        if db.count_reeferals(message.from_user.id):
            await Bot.send_message(message.from_user.id, f"<b>–û—Ç–ª–∏—á–Ω–æ ! –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –æ–∂–∏–¥–∞–π—Ç–µ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è </b>", reply_markup=nav.MainMenu, parse_mode='HTML')
            await Bot.send_message(admin, f"<b> –ü—Ä–∏—à–ª–∞ –∑–∞—è–≤–∫–∞ ! \n\nUsername: {message.from_user.mention} \nID USER: {message.chat.id} \n\n–ë—ã—Å—Ç—Ä–µ–µ –≤—ã–≤–µ–¥–∏ !</b> ", parse_mode='HTML')
        else: # db.count_reeferals(0):
            await Bot.send_message(message.from_user.id, "<b> –ö —Å–æ–∂–∞–¥–µ–Ω–∏—é —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∏–≤–ª–µ—á–µ–Ω–Ω—ã—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤üòî </b>", parse_mode='HTML')

    if message.text == '–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—åüí∏':
        await Bot.send_message(message.from_user.id, f"<b>1 —Ä–µ—Ñ–µ—Ä–∞–ªüë• = 0.40 ‚ÇΩ \n\n–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞üó£: https://t.me/{cfg.BOT_NICKNAME}?start={message.from_user.id}</b> ", reply_markup=nav.backMenu, parse_mode='HTML')
    if message.text == '–ü–ª–∞—Ç–µ–∂–∫–∞üí≥':
        await Bot.send_message(message.from_user.id, f"<b> –ü–ª–∞—Ç–µ–∂–∫–∞ —Ç–æ–ª—å–∫–æ PAYEER !\n–ß—Ç–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç /setpay [–í–∞—à —Å—á–µ—Ç payeer]  –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µüèÜ </b>", parse_mode='HTML')
    if message.text == '–û –±–æ—Ç–µüìö':
        await Bot.send_message(message.from_user.id, f"<b>–ë–æ—Ç —Å–æ–∑–¥–∞–Ωü§ñ: 29.05.22 </b>", parse_mode='HTML', reply_markup=nav.AboutMenu)
    if message.text == '‚¨Ö–ù–∞–∑–∞–¥':
        await Bot.send_message(message.from_user.id, f"<b>–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—éüõ°</b>", reply_markup=nav.MainMenu, parse_mode='HTML')


@dp.callback_query_handler(text="subchanneldone")
async def subchanneldone(message: types.Message):
    await Bot.delete_message(message.from_user.id, message.message.message_id)
    if check_sub_channel(await Bot.get_chat_member(chat_id=CHANNEL_ID, user_id=message.from_user.id)):
        await Bot.send_message(message.from_user.id, "<b>ü•Å–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—åü•Å!\n---------------\n–ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π –¥–µ–Ω—å–≥–∏üí∏\n1 –ø—Ä–∏–≤–ª–µ—á–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—åüë• = 0.30 ‚ÇΩ\n--------------\nüíé–ü—Ä–æ–¥–∞–µ—Ç—Å—è —Ä–µ–∫–ª–∞–º–Ω–æ–µ –º–µ—Å—Ç–æ –ø–æ–¥—Ä–æ–±–Ω–µ–µ @NotIdiotsüíé</b>", parse_mode='HTML', reply_markup=nav.MainMenu)
    else:
        await Bot.send_message(message.from_user.id, "<b>üìì–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞!üìì</b> ", parse_mode='HTML', reply_markup=nav.checkSubMenu)


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)

